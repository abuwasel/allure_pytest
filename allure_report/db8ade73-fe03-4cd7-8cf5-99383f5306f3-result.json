{"name": "Check the balance of the account is 750", "status": "failed", "statusDetails": {"message": "AssertionError: Expected Balance: 7500, but got: 750.0\nassert 750.0 == 7500", "trace": "self = <test_demo_report_with_selenium.TestDemo object at 0x000001BB4A9FFB10>, url = 'https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login'\nselectors = {'Add Customer btn': 'body > div > div > div.ng-scope > div > div.center > button:nth-child(1)', 'Add Customer submit'... Manager Login btn': 'body > div > div > div.ng-scope > div > div.borderM.box.padT20 > div:nth-child(3) > button', ...}\ninit_driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"c4de6ea27abce24d1545916137538908\")>\n\n    @allure.title(\"Check the balance of the account is 750\")\n    @allure.description(\"Enter the bank as a user, make a deposit of 1000 NIS and a withdrawal of 250, check that the balance of the account is 750\")\n    @allure.label(\"owner\", \"Ibrahim Abu Wasel\")\n    def test_login_deposit_withdraw_check_balance(self, url, selectors, init_driver):\n        \"\"\"\n        Enter the bank as a user,\n        make a deposit of 1000,\n        withdrawal of 250,\n        check that the balance of the account is 750.\n    \n        Expected: the balance is 750\n        \"\"\"\n        driver = init_driver\n        time.sleep(2)\n        # List of selector keys in the order of execution\n        actions = [\n            ('Customer Login btn', None),\n            ('Harry Potter', None),\n            ('Login btn', None),\n            ('Deposit btn', None),\n            ('amount input', 1000),\n            ('Deposit submit', None),\n            ('Withdrawl btn', None),\n            ('Withdrawl amount input', 250),\n            ('Withdrawl submit', None)\n        ]\n    \n        for action in actions:\n            if action[1] is not None:\n                handle_element(driver, selectors[action[0]], action[1])\n            else:\n                handle_element(driver, selectors[action[0]])\n            time.sleep(1)\n    \n        time.sleep(2)\n        expected_balance = 7500\n        actual_balance = get_items_as_number(driver, selectors['Balance'])\n        try:\n            assert actual_balance == expected_balance, f'Expected Balance: {expected_balance}, but got: {actual_balance}'\n        except AssertionError as e:\n            capture_a_screenshot_and_save_it(driver)\n>           raise e\n\ntest_demo_report_with_selenium.py:67: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <test_demo_report_with_selenium.TestDemo object at 0x000001BB4A9FFB10>, url = 'https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login'\nselectors = {'Add Customer btn': 'body > div > div > div.ng-scope > div > div.center > button:nth-child(1)', 'Add Customer submit'... Manager Login btn': 'body > div > div > div.ng-scope > div > div.borderM.box.padT20 > div:nth-child(3) > button', ...}\ninit_driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"c4de6ea27abce24d1545916137538908\")>\n\n    @allure.title(\"Check the balance of the account is 750\")\n    @allure.description(\"Enter the bank as a user, make a deposit of 1000 NIS and a withdrawal of 250, check that the balance of the account is 750\")\n    @allure.label(\"owner\", \"Ibrahim Abu Wasel\")\n    def test_login_deposit_withdraw_check_balance(self, url, selectors, init_driver):\n        \"\"\"\n        Enter the bank as a user,\n        make a deposit of 1000,\n        withdrawal of 250,\n        check that the balance of the account is 750.\n    \n        Expected: the balance is 750\n        \"\"\"\n        driver = init_driver\n        time.sleep(2)\n        # List of selector keys in the order of execution\n        actions = [\n            ('Customer Login btn', None),\n            ('Harry Potter', None),\n            ('Login btn', None),\n            ('Deposit btn', None),\n            ('amount input', 1000),\n            ('Deposit submit', None),\n            ('Withdrawl btn', None),\n            ('Withdrawl amount input', 250),\n            ('Withdrawl submit', None)\n        ]\n    \n        for action in actions:\n            if action[1] is not None:\n                handle_element(driver, selectors[action[0]], action[1])\n            else:\n                handle_element(driver, selectors[action[0]])\n            time.sleep(1)\n    \n        time.sleep(2)\n        expected_balance = 7500\n        actual_balance = get_items_as_number(driver, selectors['Balance'])\n        try:\n>           assert actual_balance == expected_balance, f'Expected Balance: {expected_balance}, but got: {actual_balance}'\nE           AssertionError: Expected Balance: 7500, but got: 750.0\nE           assert 750.0 == 7500\n\ntest_demo_report_with_selenium.py:64: AssertionError"}, "description": "Enter the bank as a user, make a deposit of 1000 NIS and a withdrawal of 250, check that the balance of the account is 750", "attachments": [{"name": "screenshot-2023-09-03_13-30-26", "source": "8ba47dd8-533b-4434-90e1-0d1bd05b28c8-attachment.png", "type": "image/png"}], "start": 1693737013021, "stop": 1693737026679, "uuid": "2f680fdc-21d2-462c-8679-7a2b3b0b76ab", "historyId": "df52b442a5dee8b08bdc5856ce1c0f7e", "testCaseId": "df52b442a5dee8b08bdc5856ce1c0f7e", "fullName": "test_demo_report_with_selenium.TestDemo#test_login_deposit_withdraw_check_balance", "labels": [{"name": "owner", "value": "Ibrahim Abu Wasel"}, {"name": "severity", "value": "critical"}, {"name": "epic", "value": "Login"}, {"name": "story", "value": "Login & deposit, withdrawal, balance Functionality"}, {"name": "suite", "value": "test_demo_report_with_selenium"}, {"name": "subSuite", "value": "TestDemo"}, {"name": "host", "value": "DESKTOP-G7A3TQO"}, {"name": "thread", "value": "12192-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_demo_report_with_selenium"}]}