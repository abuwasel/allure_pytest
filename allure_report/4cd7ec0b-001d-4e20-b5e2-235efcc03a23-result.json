{"name": "Check the balance of the account is 750", "status": "failed", "statusDetails": {"message": "AssertionError: Expected Balance: 7500, but got: 750.0\nassert 750.0 == 7500", "trace": "self = <test_demo_report_with_selenium.TestDemo object at 0x000001E06BFBF290>, url = 'https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login'\nselectors = {'Add Customer btn': 'body > div > div > div.ng-scope > div > div.center > button:nth-child(1)', 'Add Customer submit'... Manager Login btn': 'body > div > div > div.ng-scope > div > div.borderM.box.padT20 > div:nth-child(3) > button', ...}\ninit_driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"116cffbec01f8f44f6451059512a70c6\")>\n\n    @allure.title(\"Check the balance of the account is 750\")\n    @allure.description(\"Enter the bank as a user, make a deposit of 1000 NIS and a withdrawal of 250, check that the balance of the account is 750\")\n    @allure.label(\"owner\", \"Ibrahim Abu Wasel\")\n    def test_login_deposit_withdraw_check_balance(self, url, selectors, init_driver):\n        driver = init_driver\n        time.sleep(2)\n        handle_element(driver, selectors['Customer Login btn'])\n        time.sleep(1)\n        handle_element(driver, selectors['Harry Potter'])\n        time.sleep(1)\n        handle_element(driver, selectors['Login btn'])\n        time.sleep(1)\n        handle_element(driver, selectors['Deposit btn'])\n        time.sleep(1)\n        handle_element(driver, selectors['amount input'], 1000)\n        time.sleep(1)\n        handle_element(driver, selectors['Deposit submit'])\n        time.sleep(2)\n        handle_element(driver, selectors['Withdrawl btn'])\n        time.sleep(1)\n        handle_element(driver, selectors['Withdrawl amount input'], 250)\n        time.sleep(1)\n        handle_element(driver, selectors['Withdrawl submit'])\n        time.sleep(2)\n        expected_balance = 7500\n        actual_balance = get_items_as_number(driver, selectors['Balance'])\n        try:\n            assert actual_balance == expected_balance, f'Expected Balance: {expected_balance}, but got: {actual_balance}'\n        except AssertionError as e:\n            capture_a_screenshot_and_save_it(driver)\n>           raise e\n\ntest_demo_report_with_selenium.py:79: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <test_demo_report_with_selenium.TestDemo object at 0x000001E06BFBF290>, url = 'https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login'\nselectors = {'Add Customer btn': 'body > div > div > div.ng-scope > div > div.center > button:nth-child(1)', 'Add Customer submit'... Manager Login btn': 'body > div > div > div.ng-scope > div > div.borderM.box.padT20 > div:nth-child(3) > button', ...}\ninit_driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"116cffbec01f8f44f6451059512a70c6\")>\n\n    @allure.title(\"Check the balance of the account is 750\")\n    @allure.description(\"Enter the bank as a user, make a deposit of 1000 NIS and a withdrawal of 250, check that the balance of the account is 750\")\n    @allure.label(\"owner\", \"Ibrahim Abu Wasel\")\n    def test_login_deposit_withdraw_check_balance(self, url, selectors, init_driver):\n        driver = init_driver\n        time.sleep(2)\n        handle_element(driver, selectors['Customer Login btn'])\n        time.sleep(1)\n        handle_element(driver, selectors['Harry Potter'])\n        time.sleep(1)\n        handle_element(driver, selectors['Login btn'])\n        time.sleep(1)\n        handle_element(driver, selectors['Deposit btn'])\n        time.sleep(1)\n        handle_element(driver, selectors['amount input'], 1000)\n        time.sleep(1)\n        handle_element(driver, selectors['Deposit submit'])\n        time.sleep(2)\n        handle_element(driver, selectors['Withdrawl btn'])\n        time.sleep(1)\n        handle_element(driver, selectors['Withdrawl amount input'], 250)\n        time.sleep(1)\n        handle_element(driver, selectors['Withdrawl submit'])\n        time.sleep(2)\n        expected_balance = 7500\n        actual_balance = get_items_as_number(driver, selectors['Balance'])\n        try:\n>           assert actual_balance == expected_balance, f'Expected Balance: {expected_balance}, but got: {actual_balance}'\nE           AssertionError: Expected Balance: 7500, but got: 750.0\nE           assert 750.0 == 7500\n\ntest_demo_report_with_selenium.py:76: AssertionError"}, "description": "Enter the bank as a user, make a deposit of 1000 NIS and a withdrawal of 250, check that the balance of the account is 750", "attachments": [{"name": "screenshot-2023-08-29_15-23-23", "source": "f9534209-9132-4557-bc03-4a4b7efa2696-attachment.png", "type": "image/png"}], "start": 1693311789785, "stop": 1693311803374, "uuid": "3c7cb52d-f37b-49fe-add5-44ca113b8b2d", "historyId": "df52b442a5dee8b08bdc5856ce1c0f7e", "testCaseId": "df52b442a5dee8b08bdc5856ce1c0f7e", "fullName": "test_demo_report_with_selenium.TestDemo#test_login_deposit_withdraw_check_balance", "labels": [{"name": "severity", "value": "critical"}, {"name": "owner", "value": "Ibrahim Abu Wasel"}, {"name": "story", "value": "Login & deposit, withdrawal, balance Functionality"}, {"name": "epic", "value": "Login"}, {"name": "suite", "value": "test_demo_report_with_selenium"}, {"name": "subSuite", "value": "TestDemo"}, {"name": "host", "value": "DESKTOP-G7A3TQO"}, {"name": "thread", "value": "27212-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_demo_report_with_selenium"}]}